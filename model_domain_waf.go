/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.103.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package r1cdn

import (
	"encoding/json"
	"fmt"
)

// DomainWaf struct for DomainWaf
type DomainWaf struct {
	DeprecatedWafSettings *DeprecatedWafSettings
	Waf *Waf
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *DomainWaf) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into DeprecatedWafSettings
	err = json.Unmarshal(data, &dst.DeprecatedWafSettings);
	if err == nil {
		jsonDeprecatedWafSettings, _ := json.Marshal(dst.DeprecatedWafSettings)
		if string(jsonDeprecatedWafSettings) == "{}" { // empty struct
			dst.DeprecatedWafSettings = nil
		} else {
			return nil // data stored in dst.DeprecatedWafSettings, return on the first match
		}
	} else {
		dst.DeprecatedWafSettings = nil
	}

	// try to unmarshal JSON data into Waf
	err = json.Unmarshal(data, &dst.Waf);
	if err == nil {
		jsonWaf, _ := json.Marshal(dst.Waf)
		if string(jsonWaf) == "{}" { // empty struct
			dst.Waf = nil
		} else {
			return nil // data stored in dst.Waf, return on the first match
		}
	} else {
		dst.Waf = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(DomainWaf)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *DomainWaf) MarshalJSON() ([]byte, error) {
	if src.DeprecatedWafSettings != nil {
		return json.Marshal(&src.DeprecatedWafSettings)
	}

	if src.Waf != nil {
		return json.Marshal(&src.Waf)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableDomainWaf struct {
	value *DomainWaf
	isSet bool
}

func (v NullableDomainWaf) Get() *DomainWaf {
	return v.value
}

func (v *NullableDomainWaf) Set(val *DomainWaf) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainWaf) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainWaf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainWaf(val *DomainWaf) *NullableDomainWaf {
	return &NullableDomainWaf{value: val, isSet: true}
}

func (v NullableDomainWaf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainWaf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


