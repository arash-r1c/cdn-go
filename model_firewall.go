/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.99.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package r1cdn

import (
	"encoding/json"
)

// checks if the Firewall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Firewall{}

// Firewall struct for Firewall
type Firewall struct {
	IsEnabled *bool `json:"is_enabled,omitempty"`
	DefaultAction *string `json:"default_action,omitempty"`
	DefaultActionDetails map[string]interface{} `json:"default_action_details,omitempty"`
	// True to verify that SNI and hostname are equal
	VerifySni *bool `json:"verify_sni,omitempty"`
	Rules []FirewallRuleView `json:"rules,omitempty"`
}

// NewFirewall instantiates a new Firewall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewall() *Firewall {
	this := Firewall{}
	var verifySni bool = false
	this.VerifySni = &verifySni
	return &this
}

// NewFirewallWithDefaults instantiates a new Firewall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallWithDefaults() *Firewall {
	this := Firewall{}
	var verifySni bool = false
	this.VerifySni = &verifySni
	return &this
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *Firewall) GetIsEnabled() bool {
	if o == nil || IsNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Firewall) GetIsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnabled) {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *Firewall) HasIsEnabled() bool {
	if o != nil && !IsNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *Firewall) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetDefaultAction returns the DefaultAction field value if set, zero value otherwise.
func (o *Firewall) GetDefaultAction() string {
	if o == nil || IsNil(o.DefaultAction) {
		var ret string
		return ret
	}
	return *o.DefaultAction
}

// GetDefaultActionOk returns a tuple with the DefaultAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Firewall) GetDefaultActionOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultAction) {
		return nil, false
	}
	return o.DefaultAction, true
}

// HasDefaultAction returns a boolean if a field has been set.
func (o *Firewall) HasDefaultAction() bool {
	if o != nil && !IsNil(o.DefaultAction) {
		return true
	}

	return false
}

// SetDefaultAction gets a reference to the given string and assigns it to the DefaultAction field.
func (o *Firewall) SetDefaultAction(v string) {
	o.DefaultAction = &v
}

// GetDefaultActionDetails returns the DefaultActionDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Firewall) GetDefaultActionDetails() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.DefaultActionDetails
}

// GetDefaultActionDetailsOk returns a tuple with the DefaultActionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Firewall) GetDefaultActionDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DefaultActionDetails) {
		return map[string]interface{}{}, false
	}
	return o.DefaultActionDetails, true
}

// HasDefaultActionDetails returns a boolean if a field has been set.
func (o *Firewall) HasDefaultActionDetails() bool {
	if o != nil && IsNil(o.DefaultActionDetails) {
		return true
	}

	return false
}

// SetDefaultActionDetails gets a reference to the given map[string]interface{} and assigns it to the DefaultActionDetails field.
func (o *Firewall) SetDefaultActionDetails(v map[string]interface{}) {
	o.DefaultActionDetails = v
}

// GetVerifySni returns the VerifySni field value if set, zero value otherwise.
func (o *Firewall) GetVerifySni() bool {
	if o == nil || IsNil(o.VerifySni) {
		var ret bool
		return ret
	}
	return *o.VerifySni
}

// GetVerifySniOk returns a tuple with the VerifySni field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Firewall) GetVerifySniOk() (*bool, bool) {
	if o == nil || IsNil(o.VerifySni) {
		return nil, false
	}
	return o.VerifySni, true
}

// HasVerifySni returns a boolean if a field has been set.
func (o *Firewall) HasVerifySni() bool {
	if o != nil && !IsNil(o.VerifySni) {
		return true
	}

	return false
}

// SetVerifySni gets a reference to the given bool and assigns it to the VerifySni field.
func (o *Firewall) SetVerifySni(v bool) {
	o.VerifySni = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *Firewall) GetRules() []FirewallRuleView {
	if o == nil || IsNil(o.Rules) {
		var ret []FirewallRuleView
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Firewall) GetRulesOk() ([]FirewallRuleView, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *Firewall) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []FirewallRuleView and assigns it to the Rules field.
func (o *Firewall) SetRules(v []FirewallRuleView) {
	o.Rules = v
}

func (o Firewall) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Firewall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: is_enabled is readOnly
	if !IsNil(o.DefaultAction) {
		toSerialize["default_action"] = o.DefaultAction
	}
	if o.DefaultActionDetails != nil {
		toSerialize["default_action_details"] = o.DefaultActionDetails
	}
	if !IsNil(o.VerifySni) {
		toSerialize["verify_sni"] = o.VerifySni
	}
	// skip: rules is readOnly
	return toSerialize, nil
}

type NullableFirewall struct {
	value *Firewall
	isSet bool
}

func (v NullableFirewall) Get() *Firewall {
	return v.value
}

func (v *NullableFirewall) Set(val *Firewall) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewall) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewall(val *Firewall) *NullableFirewall {
	return &NullableFirewall{value: val, isSet: true}
}

func (v NullableFirewall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


